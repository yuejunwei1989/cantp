#include <gtest/gtest.h>
#include <string.h>
#include "cantp.h"
#include "cantp_callout.h"

static uint8_t rx_frame[4095] = {0};
static uint8_t rx_length = 0;
static uint8_t tx_frame[64]={0};
#ifdef __cplusplus
extern "C" {
#endif
void dcm_rx_indication(uint8_t length,uint8_t* data)
{
	rx_length = length;
    for(int i = 0; i<length; i++)
    {
    	rx_frame[i] = data[i];
    	printf("0x%x ",data[i]);
    }
    printf("******************");
    printf("\n\r");
}



void canif_transmit(uint8_t tx_sdu_id, uint8_t* sdu_data_ptr, uint16_t sdu_length)
{
    for(int i = 0; i<sdu_length; i++)
    {
    	tx_frame[i] = sdu_data_ptr[i];
    	printf("0x%x ",sdu_data_ptr[i]);
    }
    printf("@@@@@@@@@@@@@@@@@@@@");
    printf("\n\r");
}
#ifdef __cplusplus
}
#endif
class CanTpTest : public testing::Test {
protected:
	uint8_t test_data_tx_sf[2]={0x10,0x02};
	uint8_t can_data_tx_sf[8]={0x02,0x10,0x02,0xaa,0xaa,0xaa,0xaa,0xaa};

	uint8_t test_data_tx_mf[22]={0x22,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x9,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x20,0x21};
	uint8_t can_data_tx_mf_ff[8]={0x10,0x16,0x22,0x1,0x2,0x3,0x4,0x5};
	uint8_t can_data_tx_mf_cf_1[8]={0x21,0x06,0x07,0x08,0x9,0x10,0x11,0x12};
	uint8_t can_data_tx_mf_cf_2[8]={0x22,0x13,0x14,0x15,0x16,0x17,0x18,0x19};
	uint8_t can_data_tx_mf_cf_3[8]={0x23,0x20,0x21,0xaa,0xaa,0xaa,0xaa,0xaa};
	uint8_t test_data_rx_fc[3]={0x30, 0x00, 0x00};

	uint8_t can_data_rx_sf[3]={0x02,0x10,0x02};
	uint8_t test_data_rx_sf[2]={0x10,0x02};

	uint8_t test_data_rx_mf[14]={0x36,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x9,0x10,0x11,0x12,0x13};
	uint8_t can_data_rx_ff[8]={0x10,0x0e,0x36,0x01,0x02,0x03,0x04,0x05};
	uint8_t can_data_rx_cf_1[8]={0x21,0x06,0x07,0x08,0x09,0x10,0x11,0x12};
	uint8_t can_data_rx_cf_2[2]={0x22,0x13};

	uint8_t test_data_tx_sf_fd[22]={0x22,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x9,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x20,0x21};
	uint8_t can_data_tx_sf_fd[24]={0x00,0x16,0x22,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x9,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x20,0x21};

	uint8_t test_data_rx_sf_fd[22]={0x22,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x9,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x20,0x21};
	uint8_t can_data_rx_sf_fd[24]={0x00,0x16,0x22,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x9,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x20,0x21};

	uint8_t test_data_tx_mf_fd[65]={0x22,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x9,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,
			                        0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,
									0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,
									0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,
									0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,
	                                0x60,0x61,0x62,0x63,0x64};
	uint8_t can_data_tx_mf_ff_fd[64]={0x10,0x41,0x22,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x9,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,
            0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,
			0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,
			0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,
			0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,
            0x60,0x61};
	uint8_t can_data_tx_mf_cf_1_fd[8]={0x21,0x62,0x63,0x64,0xaa,0xaa,0xaa,0xaa};
	uint8_t test_data_rx_fc_fd[3]={0x30, 0x00, 0x00};

	uint8_t can_data_rx_ff_fd[64]={0x10,0x41,0x22,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x9,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,
            0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,
			0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,
			0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,
			0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,
            0x60,0x61};
	uint8_t can_data_rx_cf_1_fd[8]={0x21,0x62,0x63,0x64,0xaa,0xaa,0xaa,0xaa};
	uint8_t test_data_rx_mf_fd[65]={0x22,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x9,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,
			                        0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,
									0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,
									0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,
									0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,
	                                0x60,0x61,0x62,0x63,0x64};

	cantp_config_t cantp_config={
			{
			{false,0,0,0,0,0,0,0,0,0},
			{true,0,0,0,0,0,0,0,0,0}}
	};
	cantp_config_t cantp_config_fd={true};

    void SetUp() override {
    	cantp_init(&cantp_config);
    }

    void cantp_test_tx_sf() {
    	cantp_transmit(0U, test_data_tx_sf,2U);
    	cantp_tx_confirmation(0);
    	EXPECT_EQ(memcmp(tx_frame,can_data_tx_sf,8), 0);
    }

    void cantp_test_tx_mf() {
    	cantp_transmit(0U, test_data_tx_mf,22U);
    	EXPECT_EQ(memcmp(tx_frame,can_data_tx_mf_ff,8), 0);
    	cantp_tx_confirmation(0);
    	cantp_main_function();
    	cantp_rx_indication(0,test_data_rx_fc,3U);
    	cantp_main_function();
    	EXPECT_EQ(memcmp(tx_frame,can_data_tx_mf_cf_1,8), 0);
    	cantp_tx_confirmation(0);
    	cantp_main_function();
    	EXPECT_EQ(memcmp(tx_frame,can_data_tx_mf_cf_2,8), 0);
    	cantp_tx_confirmation(0);
    	cantp_main_function();
    	EXPECT_EQ(memcmp(tx_frame,can_data_tx_mf_cf_3,8), 0);
    	cantp_tx_confirmation(0);
    }

    void cantp_test_rx_sf() {
    	cantp_rx_indication(0, can_data_rx_sf,3U);
    	cantp_main_function();
    	EXPECT_EQ(memcmp(rx_frame, test_data_rx_sf,2U), 0);
    }

    void cantp_test_rx_mf() {
    	cantp_rx_indication(0, can_data_rx_ff,8U);
    	cantp_main_function();
    	cantp_tx_confirmation(0);
    	cantp_main_function();
    	cantp_rx_indication(0, can_data_rx_cf_1,8U);
    	cantp_main_function();
    	cantp_rx_indication(0, can_data_rx_cf_2,2U);
    	cantp_main_function();
    	EXPECT_EQ(memcmp(rx_frame,test_data_rx_mf,14U), 0);
    }

    void cantp_test_tx_sf_fd() {
    	cantp_transmit(1U, test_data_tx_sf_fd,22U);
    	cantp_tx_confirmation(1);
    	EXPECT_EQ(memcmp(tx_frame,can_data_tx_sf_fd,24U), 0);
    }

    void cantp_test_tx_mf_fd() {
    	cantp_transmit(1U, test_data_tx_mf_fd,65U);
    	EXPECT_EQ(memcmp(tx_frame,can_data_tx_mf_ff_fd,64), 0);
    	cantp_tx_confirmation(1);
    	cantp_main_function();
    	cantp_rx_indication(1,test_data_rx_fc,3U);
    	cantp_main_function();
    	cantp_tx_confirmation(1);
    	EXPECT_EQ(memcmp(tx_frame,can_data_tx_mf_cf_1_fd,8), 0);
    	cantp_main_function();
    }

    void cantp_test_rx_sf_fd() {
    	cantp_rx_indication(1, can_data_rx_sf_fd,24U);
    	cantp_main_function();
    	EXPECT_EQ(memcmp(rx_frame,test_data_rx_sf_fd,22U), 0);
    }
    void cantp_test_rx_mf_fd() {
    	cantp_rx_indication(1, can_data_rx_ff_fd,64U);
    	cantp_main_function();
    	cantp_tx_confirmation(1);
    	cantp_main_function();
    	cantp_rx_indication(1, can_data_rx_cf_1_fd,8U);
    	cantp_main_function();
    	EXPECT_EQ(memcmp(rx_frame,test_data_rx_mf_fd,65U), 0);
    }
};

TEST_F(CanTpTest, TxSf) {
	cantp_test_tx_sf();
}
TEST_F(CanTpTest, TxMf) {
	cantp_test_tx_mf();
}
TEST_F(CanTpTest, RxSf) {
	cantp_test_rx_sf();
}
TEST_F(CanTpTest, RxMf) {
	cantp_test_rx_mf();
}
TEST_F(CanTpTest, TxSfFd) {
	cantp_test_tx_sf_fd();
}
TEST_F(CanTpTest, TxMfFd) {
	cantp_test_tx_mf_fd();
}
TEST_F(CanTpTest, RxSfFd) {
	cantp_test_rx_sf_fd();
}
TEST_F(CanTpTest, RxMfFd) {
	cantp_test_rx_mf_fd();
}
